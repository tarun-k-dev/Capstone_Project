<!DOCTYPE html>
<html lang="en-US">


<head>
<title>ELearning Platform</title>
<link rel="icon" href="../../favicon.ico" type="image/x-icon">
<link rel="stylesheet" href="../../css/styles.css">
<link rel="stylesheet" href="../../css/custom.css">
<link rel="stylesheet" href="../../css/font-awesome.min.css">
<script src="../../js/font.js"></script>
<!-- end cmp -->
<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
<!--===============================================================================================-->	
	<link rel="icon" type="image/png" href="../../images/icons/favicon.ico"/>
<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="../../vendor/bootstrap/css/bootstrap.min.css">
<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="../../fonts/font-awesome-4.7.0/css/font-awesome.min.css">
<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="../../fonts/iconic/css/material-design-iconic-font.min.css">
<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="../../vendor/animate/animate.css">
<!--===============================================================================================-->	
	<link rel="stylesheet" type="text/css" href="../../vendor/css-hamburgers/hamburgers.min.css">
<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="../../vendor/animsition/css/animsition.min.css">
<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="../../vendor/select2/select2.min.css">
<!--===============================================================================================-->	
	<link rel="stylesheet" type="text/css" href="../../vendor/daterangepicker/daterangepicker.css">
<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="../../css/util.css">
	<link rel="stylesheet" type="text/css" href="../../css/main.css">
</head>


<body style="position:relative;min-height:100%;">

<header>

    <div class='w3-container top' style="padding-top:20px;">
        <a class='w3schools-logo notranslate' style="position:absolute;" href='../../index.html'>Elearning<span class='dotcom'>.org</span></a>
      
        <!-- <div id="loginactioncontainer" class='w3-right' style='width:80px;height:50px;'>
          <div id="mypagediv"></div> 
            <a id="w3loginbtn" style="border: medium none; display: inline; cursor: pointer; background-color: #2090db;" class="login w3-right w3-hover-greener" href="../../login.html" target="_self">LOG IN</a>
        </div> -->
      
        <div id="theworldsgreatest" class='w3-right w3-hide-medium w3-hide-small w3-wide toptext' style="line-height: 50px;margin-right:20px;font-family:'Segoe UI',Arial,sans-serif">
          THE WORLD'S LARGEST ONLINE LEARNING PLATFORM
        </div>
      
      </div>
      
      
      <div class="w3-bar w3-theme w3-card-2 w3-wide notranslate">
       <a class="w3-bar-item w3-button w3-hover-white w3-padding-16 hidesm" href="javascript:void(0)" onclick="w3_open()"><i class='fa'>&#xf0c9;</i></a>
       <a class="w3-bar-item w3-button barex w3-hover-white w3-padding-16" href="javascript:void(0)" onclick="w3_open_nav('tutorials')" id="navbtn_tutorials">WEB TECHNOLOGIES <i class='fa fa-caret-down'></i><i class='fa fa-caret-up' style="display:none"></i></a>
       <a class="w3-bar-item w3-button barex w3-hover-white w3-padding-16" href="javascript:void(0)" onclick="w3_open_nav('references')" id="navbtn_references">CORE SUBJECTS <i class='fa fa-caret-down'></i><i class='fa fa-caret-up' style="display:none"></i></a>
       <!-- <a class="w3-bar-item w3-button barex w3-hover-white w3-padding-16" href="javascript:void(0)" onclick="w3_open_nav('examples')" id="navbtn_examples">QUIZ <i class='fa fa-caret-down'></i><i class='fa fa-caret-up' style="display:none"></i></a> -->
       <!-- <a class="w3-bar-item w3-button barex w3-hover-white w3-padding-16 w3-hide-medium w3-hide-small" href="javascript:void(0)" onclick="w3_open_nav('exercises')" id="navbtn_exercises">ONLINE COURSES <i class='fa fa-caret-down'></i><i class='fa fa-caret-up' style="display:none"></i></a> -->
       <a class="w3-bar-item w3-button w3-hover-white w3-padding-16 w3-left topnav-some w3-hide"  href="../../quiz.html" title='quiz'>QUIZ</a>
       <a class="w3-bar-item w3-button w3-hover-white w3-padding-16 w3-left topnav-some w3-hide"  href="#" title='oc'>ONLINE COURSES</a>
 
       <div class="w3-right">
        
        <!-- <a class="w3-bar-item w3-button w3-hover-white w3-padding-16 w3-right topnav-some w3-hide"  href="../../signup.html" title='signup'>Sign Up</a> -->
        <a class="w3-bar-item w3-button w3-hover-white w3-padding-16 w3-right topnav-some w3-hide"  href="../../about.html" title='About'>About</a>
        
       </div>
      </div>
      
      
       <div id='myAccordion' class="w3-card-2 w3-light-grey w3-center w3-hide-large" style="display:none;cursor:default"> 
       <a href="javascript:void(0)" onclick="w3_close()" class="w3-button w3-xlarge w3-right">&times;</a><br>
       <div class="w3-container w3-padding-32">
        <a class="w3-button w3-block w3-large w3-wide" onclick="open_xs_menu('tutorials');" href="javascript:void(0);">WEB TECHNOLOGIES <i class='fa fa-caret-down'></i></a>
        <div id="sectionxs_tutorials" class="w3-white w3-show"></div>
        <a class="w3-button w3-block w3-large w3-wide" onclick="open_xs_menu('references')" href="javascript:void(0);">CORE SUBJECTS <i class='fa fa-caret-down'></i></a>
        <div id="sectionxs_references" class="w3-white w3-show"></div>
        <a class="w3-button w3-block w3-large w3-wide" href="../../quiz.html">QUIZ</i></a>
        <div id="sectionxs_examples" class="w3-white w3-show"></div>
        <a class="w3-button w3-block w3-large w3-wide" href="#">ONLINE COURSES</i></a>
        <div id="sectionxs_exercises" class="w3-white w3-show"></div>
        
       </div>
      </div> 
      
      <nav id="nav_tutorials" class="w3-light-grey w3-card-2 w3-hide-small navex">
       <span onclick="w3_close_nav('tutorials')" class="w3-button w3-xlarge w3-display-topright barex">&times;</span><br>
       <div class="w3-row-padding w3-bar-block">
        <div class="w3-col l3 m6">
         <h3 class="w3-margin-top">HTML5 and CSS3</h3>
          <a class="w3-bar-item w3-button" href="../HTML/a.html">HTML - Attributes</a>
          <a class="w3-bar-item w3-button" href="../HTML/b.html">HTML - Frames</a>
          <a class="w3-bar-item w3-button" href="../HTML/c.html">HTML - Forms</a>
          <a class="w3-bar-item w3-button" href="../HTML/d.html">HTML - Embed Media</a>
          <a class="w3-bar-item w3-button" href="../HTML/e.html">HTML - Layouts</a>
          <a class="w3-bar-item w3-button" href="../CSS/a.html">CSS - Visibility</a>
          <a class="w3-bar-item w3-button" href="../CSS/b.html">CSS - Positioning</a>
          <a class="w3-bar-item w3-button" href="../CSS/c.html">CSS - Padding</a>
          <a class="w3-bar-item w3-button" href="../CSS/d.html">CSS - Layers</a>
          <a class="w3-bar-item w3-button" href="../CSS/e.html">CSS - Animation</a> 
      
        </div>
        <div class="w3-col l3 m6">
         <h3 class="w3-margin-top">JavaScript</h3>
         <a class="w3-bar-item w3-button" href="../JavaScript/a.html">JavaScript - Objects</a>
         <a class="w3-bar-item w3-button" href="../JavaScript/b.html">JavaScript - Strings</a>
         <a class="w3-bar-item w3-button" href='../JavaScript/c.html'>JavaScript - Math</a>
         <a class="w3-bar-item w3-button" href='../JavaScript/d.html'>JavaScript - Arrays</a>
         <a class="w3-bar-item w3-button" href='../JavaScript/e.html'>JavaScript - Error Handling</a>
         
        </div> 
       <div class="w3-col l3 m6">
          <h3 class="w3-margin-top">Python</h3>
          <a class="w3-bar-item w3-button" href="../Python/a.html">Python - Variables</a>
          <a class="w3-bar-item w3-button" href="../Python/b.html">Python - Strings</a>
          <a class="w3-bar-item w3-button" href="../Python/c.html">Python - Lists</a>
          <a class="w3-bar-item w3-button" href="../Python/d.html">Python - Tuples</a>
          <a class="w3-bar-item w3-button" href="../Python/e.html">Python - Dictionary</a>
          <a class="w3-bar-item w3-button" href="../Python/f.html">Python - Exceptions</a>
          
         
        </div>
        <div class="w3-col l3 m6 w3-hide-medium">
           
         <h3 class="w3-margin-top">Artificial Intelligence</h3>
          <a class="w3-bar-item w3-button" href="../AI/a.html"> AI Overview</a>
          <a class="w3-bar-item w3-button" href="../AI/b.html"> NLP</a>
          <a class="w3-bar-item w3-button" href="../AI/c.html"> Robotics</a> 
          <a class="w3-bar-item w3-button" href="../AI/d.html"> Neural Networks</a> 
          <a class="w3-bar-item w3-button" href="../AI/e.html"> Expert Systems</a> 
           
        </div>
       </div>
       <br class="hidesm">
      </nav>
      
      <nav id="nav_references" class="w3-light-grey w3-card-2 w3-hide-small navex">
       <span onclick="w3_close_nav('references')" class="w3-button w3-xlarge w3-display-topright barex">&times;</span><br>
       <div class="w3-row-padding w3-bar-block">
        <div class="w3-col l3 m6">
         <h3 class="w3-margin-top">Data Structure & Algorithms</h3>
          <a class="w3-bar-item w3-button" href="../DSA/a.html">Greedy Algorithms</a>
          <a class="w3-bar-item w3-button" href="../DSA/b.html">Divide and Conquer</a>
          <a class="w3-bar-item w3-button" href="../DSA/c.html">Dynamic Programming</a>
          <a class="w3-bar-item w3-button" href='../DSA/d.html'>Linked List</a>
          <a class="w3-bar-item w3-button" href="../DSA/e.html">Stack</a>
          <a class="w3-bar-item w3-button" href="../DSA/f.html">Queue</a>
         
        </div>
        <div class="w3-col l3 m6">
         <h3 class="w3-margin-top">Database</h3>
          <a class="w3-bar-item w3-button" href="../Database/a.html"> Architecture</a>
          <a class="w3-bar-item w3-button" href='../Database/b.html'> ER Model</a>
          <a class="w3-bar-item w3-button" href="../Database/c.html"> Indexing</a>
          <a class="w3-bar-item w3-button" href='../Database/d.html'> Hashing</a>
          <a class="w3-bar-item w3-button" href='../Database/e.html'> Deadlock</a>
        
        </div>
        <div class="w3-col l3 m6">
         <h3 class="w3-margin-top">Computer Networks</h3>
          <a class="w3-bar-item w3-button" href='../Network/a.html'> Network Types</a>
          <a class="w3-bar-item w3-button" href='../Network/b.html'> Topologies</a>
          <a class="w3-bar-item w3-button" href='../Network/c.html'> Physical Layer</a>
          <a class="w3-bar-item w3-button" href='../Network/d.html'> Data Link Layer</a>
          <a class="w3-bar-item w3-button" href='../Network/e.html'> Network Layer</a>
      
        </div>
        <div class="w3-col l3 m6">
         <h3 class="w3-margin-top">Operating System</h3>
          <a class="w3-bar-item w3-button" href='../OS/a.html'> OS Types</a>
          <a class="w3-bar-item w3-button" href='../OS/b.html'> Processes</a>
          <a class="w3-bar-item w3-button" href='../OS/c.html'> Memory Management</a>
          <a class="w3-bar-item w3-button" href='../OS/d.html'> Virtual Memory</a>
          <a class="w3-bar-item w3-button" href='../OS/e.html'> File System</a>
        
        </div>
       </div>
       <br class="hidesm">
      </nav>
      
      <nav id="nav_examples" class="w3-light-grey w3-card-2 w3-hide-small navex">
       <span onclick="w3_close_nav('examples')" class="w3-button w3-xlarge w3-display-topright barex">&times;</span><br>
       <div class="w3-row-padding w3-bar-block">
        <div class="w3-col l3 m6">
         <h3 class="w3-margin-top">HTML and CSS</h3>
         <a class="w3-bar-item w3-button" href='#'>HTML Quiz</a>
         <a class="w3-bar-item w3-button" href='#'>CSS Quiz</a>
         
        </div>
        <div class="w3-col l3 m6">
        
         <h3 class="w3-margin-top">Programming</h3>
         <a class="w3-bar-item w3-button" href="#" target="_top">Python Quiz</a>
         <a class="w3-bar-item w3-button" href="#" target="_top">JavaScript Quiz</a>
        </div>
        <div class="w3-col l3 m6">
         <h3 class="w3-margin-top">Core Subjects</h3>
         <a class="w3-bar-item w3-button" href="#" target="_top">Data Structure Quiz</a>
         <a class="w3-bar-item w3-button" href="#" target="_top">Algorithms Quiz</a>
         <a class="w3-bar-item w3-button" href="#" target="_top">Database Quiz</a>
         <a class="w3-bar-item w3-button" href="#" target="_top">Operating System Quiz</a>
         <a class="w3-bar-item w3-button" href="#" target="_top">Computer Network Quiz</a>
       
        
        </div>
        <div class="w3-col l3 m6 w3-hide-medium">
         <h3 class="w3-margin-top">Advanced Technology</h3>
         <a class="w3-bar-item w3-button" href="#" target="_top">AI Quiz</a>
         <a class="w3-bar-item w3-button" href="#" target="_top">NLP Quiz</a>
         <a class="w3-bar-item w3-button" href="#" target="_top">Robotics Quiz</a>
        </div>
      </div>
       <br class="hidesm">
      </nav>
      
      <nav id="nav_exercises" class="w3-light-grey w3-card-2 w3-hide-small w3-hide-medium navex">
       <span onclick="w3_close_nav('exercises')" class="w3-button w3-xlarge w3-display-topright barex">&times;</span><br>
       <div class="w3-row-padding w3-bar-block">
        <div class="w3-col l4 m12">
         <h3 class="w3-margin-top">Web Development</h3>
         <a class="w3-bar-item w3-button" href="#">HTML Course</a>
         <a class="w3-bar-item w3-button" href="#">CSS Course</a>
         <a class="w3-bar-item w3-button" href="#">JavaScript Course</a>
         <a class="w3-bar-item w3-button" href="#">SQL Course</a>
         <a class="w3-bar-item w3-button" href="#">Python Course</a>
        </div>
        <div class="w3-col l4 m12">
         <h3 class="w3-margin-top">Mobile Development</h3>
         <a class="w3-bar-item w3-button" href="#">React Native Course</a>
         <a class="w3-bar-item w3-button" href="#">Flutter Course</a>
        </div>
        <div class="w3-col l4 m12">
         <h3 class="w3-margin-top">Game Development</h3>
         <a class="w3-bar-item w3-button" href="#">C# Course</a>
         <a class="w3-bar-item w3-button" href="#">C++ Course</a>
         <a class="w3-bar-item w3-button" href="#">Unity 3D Course</a>
        
        </div>
       </div>
       <br class="hidesm">
      </nav>



</header>

<!-- MAIN -->

<main class="container">
    <h1 class="jumbotron">Python - Exceptions</h1>
    <br>
    <hr>


<p>Python provides two very important features to handle any unexpected error in your Python programs and to add debugging capabilities in them &minus;</p>
<ul class="list">
<li><p><b>Exception Handling</b> &minus; This would be covered in this tutorial. Here is a list standard Exceptions available in Python: <a href="/python/standard_exceptions.htm">Standard Exceptions</a>.</p></li>
<li><p><b>Assertions</b> &minus; This would be covered in <a href="/python/assertions_in_python.htm">Assertions in Python</a> tutorial.</p></li>
</ul>
<p>List of Standard Exceptions &minus;</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">Sr.No.</th>
<th style="text-align:center;">Exception Name &amp; Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td><p><b>Exception</b></p>
<p>Base class for all exceptions</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td><p><b>StopIteration</b></p>
<p>Raised when the next() method of an iterator does not point to any object.</p></td>
</tr>
<tr>
<td class="ts">3</td>
<td><p><b>SystemExit</b></p>
<p>Raised by the sys.exit() function.</p></td>
</tr>
<tr>
<td class="ts">4</td>
<td><p><b>StandardError</b></p>
<p>Base class for all built-in exceptions except StopIteration and SystemExit.</p></td>
</tr>
<tr>
<td class="ts">5</td>
<td><p><b>ArithmeticError</b></p>
<p>Base class for all errors that occur for numeric calculation.</p></td>
</tr>
<tr>
<td class="ts">6</td>
<td><p><b>OverflowError</b></p>
<p>Raised when a calculation exceeds maximum limit for a numeric type.</p></td>
</tr>
<tr>
<td class="ts">7</td>
<td><p><b>FloatingPointError</b></p>
<p>Raised when a floating point calculation fails.</p></td>
</tr>
<tr>
<td class="ts">8</td>
<td><p><b>ZeroDivisionError</b></p>
<p>Raised when division or modulo by zero takes place for all numeric types.</p></td>
</tr>
<tr>
<td class="ts">9</td>
<td><p><b>AssertionError</b></p>
<p>Raised in case of failure of the Assert statement.</p></td>
</tr>
<tr>
<td class="ts">10</td>
<td><p><b>AttributeError</b></p>
<p>Raised in case of failure of attribute reference or assignment.</p></td>
</tr>
<tr>
<td class="ts">11</td>
<td><p><b>EOFError</b></p>
<p>Raised when there is no input from either the raw_input() or input() function and the end of file is reached.</p></td>
</tr>
<tr>
<td class="ts">12</td>
<td><p><b>ImportError</b></p>
<p>Raised when an import statement fails.</p></td>
</tr>
<tr>
<td class="ts">13</td>
<td><p><b>KeyboardInterrupt</b></p>
<p>Raised when the user interrupts program execution, usually by pressing Ctrl+c.</p></td>
</tr>
<tr>
<td class="ts">14</td>
<td><p><b>LookupError</b></p>
<p>Base class for all lookup errors.</p></td>
</tr>
<tr>
<td class="ts">15</td>
<td><p><b>IndexError</b></p>
<p>Raised when an index is not found in a sequence.</p></td>
</tr>
<tr>
<td class="ts">16</td>
<td><p><b>KeyError</b></p>
<p>Raised when the specified key is not found in the dictionary.</p></td>
</tr>
<tr>
<td class="ts">17</td>
<td><p><b>NameError</b></p>
<p>Raised when an identifier is not found in the local or global namespace.</p></td>
</tr>
<tr>
<td class="ts">18</td>
<td><p><b>UnboundLocalError</b></p>
<p>Raised when trying to access a local variable in a function or method but no value has been assigned to it.</p></td>
</tr>
<tr>
<td class="ts">19</td>
<td><p><b>EnvironmentError</b></p>
<p>Base class for all exceptions that occur outside the Python environment.</p></td>
</tr>
<tr>
<td class="ts">20</td>
<td><p><b>IOError</b></p>
<p>Raised when an input/ output operation fails, such as the print statement or the open() function when trying to open a file that does not exist.</p></td>
</tr>
<tr>
<td class="ts">21</td>
<td><p><b>IOError</b></p>
<p>Raised for operating system-related errors.</p></td>
</tr>
<tr>
<td class="ts">22</td>
<td><p><b>SyntaxError</b></p>
<p>Raised when there is an error in Python syntax.</p></td>
</tr>
<tr>
<td class="ts">23</td>
<td><p><b>IndentationError</b></p>
<p>Raised when indentation is not specified properly.</p></td>
</tr>
<tr>
<td class="ts">24</td>
<td><p><b>SystemError</b></p>
<p>Raised when the interpreter finds an internal problem, but when this error is encountered the Python interpreter does not exit.</p></td>
</tr>
<tr>
<td class="ts">25</td>
<td><p><b>SystemExit</b></p>
<p>Raised when Python interpreter is quit by using the sys.exit() function. If not handled in the code, causes the interpreter to exit.</p></td>
</tr>
<tr>
<td class="ts">26</td>
<td><p><b>TypeError</b></p>
<p>Raised when an operation or function is attempted that is invalid for the specified data type.</p></td>
</tr>
<tr>
<td class="ts">27</td>
<td><p><b>ValueError</b></p>
<p>Raised when the built-in function for a data type has the valid type of arguments, but the arguments have invalid values specified.</p></td>
</tr>
<tr>
<td class="ts">28</td>
<td><p><b>RuntimeError</b></p>
<p>Raised when a generated error does not fall into any category.</p></td>
</tr>
<tr>
<td class="ts">29</td>
<td><p><b>NotImplementedError</b></p>
<p>Raised when an abstract method that needs to be implemented in an inherited class is not actually implemented.</p></td>
</tr>
</table>
<br>
<h3>Assertions in Python</h3>
<br>
<p>An assertion is a sanity-check that you can turn on or turn off when you are done with your testing of the program.</p>
<p>The easiest way to think of an assertion is to liken it to a <b>raise-if</b> statement (or to be more accurate, a raise-if-not statement). An expression is tested, and if the result comes up false, an exception is raised.</p>
<p>Assertions are carried out by the assert statement, the newest keyword to Python, introduced in version 1.5.</p>
<p>Programmers often place assertions at the start of a function to check for valid input, and after a function call to check for valid output.</p>
<br>
<h3>The <i>assert</i> Statement</h3>
<br>
<p>When it encounters an assert statement, Python evaluates the accompanying expression, which is hopefully true. If the expression is false, Python raises an <i>AssertionError</i> exception.</p>
<p>The <b>syntax</b> for assert is &minus;</p>
<pre class="result notranslate">
assert Expression[, Arguments]
</pre>
<p>If the assertion fails, Python uses ArgumentExpression as the argument for the AssertionError. AssertionError exceptions can be caught and handled like any other exception using the try-except statement, but if not handled, they will terminate the program and produce a traceback.</p>
<br>
<h3>Example</h3>
<br>
<p>Here is a function that converts a temperature from degrees Kelvin to degrees Fahrenheit. Since zero degrees Kelvin is as cold as it gets, the function bails out if it sees a negative temperature &minus;</p>
<div class="demo-view">
<!-- <a href="http://tpcg.io/fBXCk7" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a> -->
</div>
<pre class="prettyprint notranslate">
#!/usr/bin/python
def KelvinToFahrenheit(Temperature):
   assert (Temperature >= 0),"Colder than absolute zero!"
   return ((Temperature-273)*1.8)+32
print KelvinToFahrenheit(273)
print int(KelvinToFahrenheit(505.78))
print KelvinToFahrenheit(-5)
</pre>
<p>When the above code is executed, it produces the following result &minus;</p>
<pre class="result notranslate">
32.0
451
Traceback (most recent call last):
File "test.py", line 9, in &lt;module&gt;
print KelvinToFahrenheit(-5)
File "test.py", line 4, in KelvinToFahrenheit
assert (Temperature >= 0),"Colder than absolute zero!"
AssertionError: Colder than absolute zero!
</pre>
<br>
<h2>What is Exception?</h2>
<br>
<p>An exception is an event, which occurs during the execution of a program that disrupts the normal flow of the program's instructions. In general, when a Python script encounters a situation that it cannot cope with, it raises an exception. An exception is a Python object that represents an error.</p>
<p>When a Python script raises an exception, it must either handle the exception immediately otherwise it terminates and quits.</p>
<br>
<h2>Handling an exception</h2>
<br>
<p>If you have some <i>suspicious</i> code that may raise an exception, you can defend your program by placing the suspicious code in a <b>try:</b> block. After the try: block, include an <b>except:</b> statement, followed by a block of code which handles the problem as elegantly as possible.</p>
<br>
<h3>Syntax</h3>
<br>
<p>Here is simple syntax of <i>try....except...else</i> blocks &minus;</p>
<pre class="result notranslate">
try:
   You do your operations here;
   ......................
except <i>ExceptionI</i>:
   If there is ExceptionI, then execute this block.
except <i>ExceptionII</i>:
   If there is ExceptionII, then execute this block.
   ......................
else:
   If there is no exception then execute this block. 
</pre>
<p>Here are few important points about the above-mentioned syntax &minus;</p>
<ul class="list">
<li><p>A single try statement can have multiple except statements. This is useful when the try block contains statements that may throw different types of exceptions.</p></li>
<li><p>You can also provide a generic except clause, which handles any exception.</p></li>
<li><p>After the except clause(s), you can include an else-clause. The code in the else-block executes if the code in the try: block does not raise an exception.</p></li>
<li><p>The else-block is a good place for code that does not need the try: block's protection.</p></li>
</ul>
<br>
<h3>Example</h3>
<br>
<p>This example opens a file, writes content in the, file and comes out gracefully because there is no problem at all &minus;</p>
<div class="demo-view">
<!-- <a href="http://tpcg.io/wDwtP9" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a> -->
</div>
<pre class="prettyprint notranslate">
#!/usr/bin/python

try:
   fh = open("testfile", "w")
   fh.write("This is my test file for exception handling!!")
except IOError:
   print "Error: can\'t find file or read data"
else:
   print "Written content in the file successfully"
   fh.close()
</pre>
<p>This produces the following result &minus;</p>
<pre class="result notranslate">
Written content in the file successfully
</pre>
<br>
<h3>Example</h3>
<br>
<p>This example tries to open a file where you do not have write permission, so it raises an exception &minus;</p>
<div class="demo-view">
<!-- <a href="http://tpcg.io/guvZfU" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a> -->
</div>
<pre class="prettyprint notranslate">
#!/usr/bin/python

try:
   fh = open("testfile", "r")
   fh.write("This is my test file for exception handling!!")
except IOError:
   print "Error: can\'t find file or read data"
else:
   print "Written content in the file successfully"
</pre>
<p>This produces the following result &minus;</p>
<pre class="result notranslate">
Error: can't find file or read data
</pre>
<br>
<h2>The <i>except</i> Clause with No Exceptions</h2>
<br>
<p>You can also use the except statement with no exceptions defined as follows &minus;</p>
<pre class="result notranslate">
try:
   You do your operations here;
   ......................
except:
   If there is any exception, then execute this block.
   ......................
else:
   If there is no exception then execute this block. 
</pre>
<p>This kind of a <b>try-except</b> statement catches all the exceptions that occur. Using this kind of try-except statement is not considered a good programming practice though, because it catches all exceptions but does not make the programmer identify the root cause of the problem that may occur.</p>
<br>
<h2>The <i>except</i> Clause with Multiple Exceptions</h2>
<br>
<p>You can also use the same <i>except</i> statement to handle multiple exceptions as follows &minus;</p>
<pre class="prettyprint notranslate">
try:
   You do your operations here;
   ......................
except(Exception1[, Exception2[,...ExceptionN]]]):
   If there is any exception from the given exception list, 
   then execute this block.
   ......................
else:
   If there is no exception then execute this block. 
</pre>
<br>
<h2>The try-finally Clause</h2>
<br>
<p>You can use a <b>finally:</b> block along with a <b>try:</b> block. The finally block is a place to put any code that must execute, whether the try-block
raised an exception or not. The syntax of the try-finally statement is this &minus;</p>
<pre class="prettyprint notranslate">
try:
   You do your operations here;
   ......................
   Due to any exception, this may be skipped.
finally:
   This would always be executed.
   ......................
</pre>
<p>You cannot use <i>else</i> clause as well along with a finally clause.</p>
<br>
<h3>Example</h3>
<br>
<div class="demo-view">
<!-- <a href="http://tpcg.io/Pfq1qs" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a> -->
</div>
<pre class="prettyprint notranslate">
#!/usr/bin/python

try:
   fh = open("testfile", "w")
   fh.write("This is my test file for exception handling!!")
finally:
   print "Error: can\'t find file or read data"
</pre>
<p>If you do not have permission to open the file in writing mode, then this will produce the following result &minus;</p>
<pre class="result notranslate">
Error: can't find file or read data
</pre>
<p>Same example can be written more cleanly as follows &minus;</p>
<div class="demo-view">
<!-- <a href="http://tpcg.io/5p1Wkr" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a> -->
</div>
<pre class="prettyprint notranslate">
#!/usr/bin/python

try:
   fh = open("testfile", "w")
   try:
      fh.write("This is my test file for exception handling!!")
   finally:
      print "Going to close the file"
      fh.close()
except IOError:
   print "Error: can\'t find file or read data"
</pre>
<p>When an exception is thrown in the <i>try</i> block, the execution immediately passes to the <i>finally</i> block. After all the statements in the <i>finally</i> block are executed, the exception is raised again and is handled in the <i>except</i> statements if present in the next higher layer of the <i>try-except</i> statement.</p>
<br>
<h2>Argument of an Exception</h2>
<br>
<p>An exception can have an <i>argument</i>, which is a value that gives additional information about the problem. The contents  of the argument vary by exception. You capture an exception's argument by supplying a variable in the except clause as follows &minus;</p>
<pre class="prettyprint notranslate">
try:
   You do your operations here;
   ......................
except <i>ExceptionType, Argument</i>:
   You can print value of Argument here...
</pre>
<p>If you write the code to handle a single exception, you can have a variable follow the name of the exception in the except statement. If you are trapping multiple exceptions, you can have a variable follow the tuple of the exception.</p>
<p>This variable receives the value of the exception mostly containing the cause of the exception. The variable can receive a single value or multiple values in the form of a tuple. This tuple usually contains the error string, the error number, and an error location.</p>
<br>
<h3>Example</h3>
<br>
<p>Following is an example for a single exception &minus;</p>
<div class="demo-view">
<!-- <a href="http://tpcg.io/Zr1ck8" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a> -->
</div>
<pre class="prettyprint notranslate">
#!/usr/bin/python

# Define a function here.
def temp_convert(var):
   try:
      return int(var)
   except ValueError, Argument:
      print "The argument does not contain numbers\n", Argument

# Call above function here.
temp_convert("xyz");
</pre>
<p>This produces the following result &minus;</p>
<pre class="result notranslate">
The argument does not contain numbers
invalid literal for int() with base 10: 'xyz'
</pre>
<br>
<h2>Raising an Exceptions</h2>
<br>
<p>You can raise exceptions in several ways by using the raise statement. The general syntax for the <b>raise</b> statement is as follows.</p>
<br>
<h3>Syntax</h3>
<br>
<pre class="result notranslate">
raise [Exception [, args [, traceback]]]
</pre>
<p>Here, <i>Exception</i> is the type of exception (for example, NameError) and <i>argument</i> is a value for the exception argument. The argument is optional; if not supplied, the exception argument is None.</p>
<p>The final argument, traceback, is also optional (and rarely used in practice), and if present, is the traceback object used for the exception.</p>
<br>
<h3>Example</h3>
<br>
<p>An exception can be a string, a class or an object. Most of the exceptions that the Python core raises are classes, with an argument that is an instance of the class. Defining new exceptions is quite easy and can be done as follows &minus;</p>
<pre class="prettyprint notranslate">
def functionName( level ):
   if level &lt; 1:
      raise "Invalid level!", level
      # The code below to this would not be executed
      # if we raise the exception
</pre>
<p><b>Note:</b> In order to catch an exception, an "except" clause must refer to the same exception thrown either class object or simple string. For example, to capture above exception, we must write the except clause as follows &minus;</p>
<pre class="prettyprint notranslate">
try:
   Business Logic here...
except "Invalid level!":
   Exception handling here...
else:
   Rest of the code here...
</pre>
<br>
<h2>User-Defined Exceptions</h2>
<br>
<p>Python also allows you to create your own exceptions by deriving classes from the standard built-in exceptions.</p>
<p>Here is an example related to <i>RuntimeError</i>. Here, a class is created that is subclassed from <i>RuntimeError</i>. This is useful when you need to display more specific information when an exception is caught.</p>
<p>In the try block, the user-defined exception is raised and caught in the except block. The variable e is used to create an instance of the class <i>Networkerror</i>.</p>
<pre class="prettyprint notranslate">
class Networkerror(RuntimeError):
   def __init__(self, arg):
      self.args = arg
</pre>
<p>So once you defined above class, you can raise the exception as follows &minus;</p>
<pre class="prettyprint notranslate">
try:
   raise Networkerror("Bad hostname")
except Networkerror,e:
   print e.args
</pre>

</main>


<footer style="background-color: #2090DB; color: white;text-align: center;" class=" py-6">
   <div class="row">
     <div class="col-12 col-md">
       <small class="d-block mb-3">&copy; 2017–2021 Licensed Product</small>
     </div>
   </div>
 </footer>
 
 
 <section>
 
 <!-- ===============================================================================================-->
     <script src="../../vendor/jquery/jquery-3.2.1.min.js"></script>
 <!--===============================================================================================-->
     <script src="../../vendor/animsition/js/animsition.min.js"></script>
 <!--===============================================================================================-->
    <script src="../../vendor/bootstrap/js/popper.js"></script>
    <script src="../../vendor/bootstrap/js/bootstrap.min.js"></script>
 <!--===============================================================================================-->
    <script src="../../vendor/select2/select2.min.js"></script>
 <!--===============================================================================================-->
    <script src="../../vendor/daterangepicker/moment.min.js"></script>
    <script src="../../vendor/daterangepicker/daterangepicker.js"></script>
 <!--===============================================================================================-->
    <script src="../../vendor/countdowntime/countdowntime.js"></script>
 <!--===============================================================================================-->
     <script src="../../js/main.js"></script>
   
     <script src="../../js/custom.js"></script>
 
     <script src="../../js/adconsent.js"></script>
     <script src="../../js/my-learning.js"></script>
     <script src="../../js/snhb-loader.min.js"></script>
     <script src="../../js/w3codecolor.js"></script>
 
 </section>
 
 </body>
 </html>